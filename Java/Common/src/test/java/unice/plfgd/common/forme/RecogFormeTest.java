package unice.plfgd.common.forme;

import org.junit.Test;
import unice.plfgd.common.forme.forme.Forme;
import unice.plfgd.common.forme.forme.Point;
import unice.plfgd.common.forme.method.RecogForme;

import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import static org.junit.Assert.assertEquals;

public class RecogFormeTest {

	String r;
	List<Point> lr;
	String t;
	List<Point> lt;
	String c;
	List<Point> lc;

	public static List<Point> convertToPts(String forme) {
		Pattern pattern = Pattern.compile("[0-9]+.[0-9]+");
		Matcher matcher = pattern.matcher(forme);

		List<Double> listNb = new ArrayList<>();

		while(matcher.find()) {
			listNb.add(Double.valueOf(matcher.group()));
		}
		List<Point> listPts = new ArrayList<>();
		for(int i = 0; i < listNb.size()-1; i+=2){
			listPts.add(new Point(listNb.get(i), listNb.get(i+1)));
		}
		return listPts;
	}

	@org.junit.Before
	public void setUp() throws Exception {
		r = "[[65.1547425545302;21.639598189317674], [64.38560059139925;21.639598189317674], [62.16572669795162;21.639598189317674], [58.329455484479865;21.639598189317674], [53.128768613674495;21.639598189317674], [46.75325739303691;20.912091897371365], [36.40841285654363;19.737267547539147], [33.72362038699839;19.289949489653242], [32.831745873094945;19.068748252237135], [32.35907330609008;19.537315966032228], [31.93277448615772;20.824273640677433], [30.98160916526846;23.10347589070365], [29.970893603843333;25.727468742353537], [29.08173631501678;28.462427467841163], [27.802838148420022;31.271498848661214], [27.015199597249897;33.60366309249161], [26.284769557466447;35.37687775272651], [25.557263265520135;38.33333469877307], [25.333604236577184;40.191227104306485], [25.333604236577184;41.76800960395693], [25.10994520763423;44.08184281931627], [25.10994520763423;44.54005025910584], [25.10994520763423;44.79690995525727], [25.10994520763423;44.964039779082775], [27.683252936241615;45.18524101649888], [32.15643351510067;45.411357836968676], [37.07938994337248;45.411357836968676], [42.28007681417785;45.411357836968676], [46.30593933515101;45.411357836968676], [51.81642058711724;45.411357836968676], [53.37945993581341;45.411357836968676], [54.81447565475566;45.411357836968676], [55.911015930858504;45.411357836968676], [56.768402850601234;45.63255907438479], [56.98873020658557;45.63255907438479], [57.157088926174495;45.63255907438479], [57.582757937028106;45.63255907438479], [58.46832070574664;45.63255907438479], [58.92575667208473;45.816121965446726], [59.70054814212808;45.91274730844519], [60.038091672346894;45.91274730844519], [60.455445155201346;45.73892682990772], [61.350081270973156;43.95304771611087], [62.301246591862416;40.933261675055924], [63.252411912751676;32.488289988814316], [63.252411912751676;28.68854428831096], [63.47607094169463;23.909771469082074], [63.47607094169463;22.397226081865213], [63.47607094169463;21.502043790198545], [63.47607094169463;21.079221721196866], [63.47607094169463;20.912091897371365], [63.47607094169463;20.552370212222105], [63.756259175755034;20.0285909426559], [63.756259175755034;19.502804476676104], [63.756259175755034;19.227801500017478], [63.97991820469799;18.742554939833262], [63.97991820469799;18.422591446230076], [63.97991820469799;18.24270158806103], [63.97991820469799;18.11512513982103]]";
		lr = convertToPts(r);
		t = "[[232.07614565855704;277.34921175894857], [232.07614565855704;285.8044242432187], [232.07614565855704;307.0798869634368], [232.07614565855704;343.3654921700224], [232.07614565855704;404.8594361717002], [234.3127359479866;666.0735196448546], [239.35120857802013;722.5535689317674], [239.35120857802013;758.0753471493988], [241.58779886744966;768.4159588227069], [248.82464654226965;767.2853747203579], [253.99095846769262;765.02420651566], [265.084285864094;755.5371312220358], [287.8152561401094;730.5857681854726], [387.55603764681206;619.080545651566], [566.5324166317114;498.8453841582774], [719.775718330537;418.86884787472036], [768.9807046979865;393.11119267337807], [774.0191773280202;376.47269502848854], [776.2557676174497;370.7452897790828], [764.5075241191275;366.8619791666667], [729.2627936241611;350.6405550894855], [665.5076814177852;327.14406809284117], [583.2945548447987;303.64758109619686], [413.2891149328859;247.16753180928413], [273.2108199356386;194.53904666089906], [243.8243891568792;171.83325168003705], [241.58779886744966;168.27242379753915], [239.35120857802013;169.40300789988814], [239.35120857802013;167.19099552572706], [239.35120857802013;180.83754161860318], [239.35120857802013;196.8337022751503], [239.35120857802013;216.69484251564248], [239.35120857802013;239.30065317175266], [239.35120857802013;260.37099270745944], [241.58779886744966;298.0087246137444], [243.8243891568792;318.9276710185962], [243.8243891568792;324.5786116427223], [243.8243891568792;324.8828998881432]]";
		lt = convertToPts(t);
		c = "[[455.784330432047;324.8828998881432], [450.19285470847313;324.8828998881432], [442.9423697042785;324.8828998881432], [437.6525537546316;324.8828998881432], [425.0373584312081;327.0658283959032], [405.45804495246085;332.5024632532858], [385.832067570697;338.37405893893316], [361.84753827600673;350.6405550894855], [352.3358850671141;355.3034635198196], [350.0992947776846;359.3322617362276], [331.1020511908819;371.87587388143174], [326.03751572986573;381.31345198458473], [318.8676599421491;388.09729795861296], [310.9858980114828;405.93792874807747], [309.8160916526846;418.86884787472036], [304.80219693791946;451.39348586933727], [302.56560664848996;470.87571658277403], [302.56560664848996;498.8453841582774], [302.56560664848996;514.7856641935822], [309.8469335227471;539.134526946134], [326.03751572986573;567.3791258127097], [334.8282167575503;581.0339328159955], [362.4189577380016;605.0711339485458], [416.7256195273175;621.2925580257271], [467.614158954663;623.553726230425], [493.83094326761744;623.553726230425], [542.6888689898805;616.819377446868], [564.2586863814317;609.5443145274049], [577.1914488517198;602.3184074384787], [592.2654939177853;588.3089957354587], [597.2793886325503;581.9709658356054], [601.7525692114094;561.7247033172539], [604.5544515520135;528.74755859375], [601.9114722608186;504.11297757620247], [595.0427983431208;449.64039779082776], [578.2806601300335;403.38319099989513], [564.2958263422819;366.8619791666667], [554.7841731333892;355.51695002272095], [547.9633920144715;348.3793868847875], [535.4587973097559;341.1043239653244], [524.0126232172819;338.8923115911633], [501.01755982810755;331.6172486717002], [491.0290609270134;331.6172486717002], [467.2142899276426;327.14406809284117], [446.2972551384228;324.8828998881432], [423.45832978319004;322.08101754753915], [398.80951405638285;319.86900517337807], [395.8486945303761;319.86900517337807], [394.83110056627515;319.86900517337807], [394.83110056627515;317.6078369686801]]";
		lc = convertToPts(c);
	}


	@Test
	public void process() {

		System.out.println("c est un cercle : " + RecogForme.process(lc).get(0));
		System.out.println("lt = " + RecogForme.process(lt));
		System.out.println("r est un rectangle : " + RecogForme.process(lr).get(0));

		//j'enleverais les try catch plus tard
		try {
			assertEquals(Forme.RECTANGLE, RecogForme.process(lr).get(0));
		}
		catch(AssertionError e) {
			System.out.println("Fail Rectangle reconnait : " + RecogForme.process(lr).get(0));
		}
		try {
			assertEquals(Forme.TRIANGLE, RecogForme.process(lt).get(0));
		}
		catch(AssertionError e) {
			System.out.println("Fail Triangle reconnait : " + RecogForme.process(lt).get(0));
		}
		try {
			assertEquals(Forme.CIRCLE, RecogForme.process(lc).get(0));
		}
		catch(AssertionError e) {
			System.out.println("Fail Cercle reconnait : " + RecogForme.process(lc).get(0));
		}
	}

	@Test
	public void recog() {
	}
}
